"""Add avatar, email_verified to User model

Revision ID: e7a8f491459a
Revises: 524c86f1d584
Create Date: 2025-08-09 13:59:25.276222

"""
from alembic import op
import sqlalchemy as sa
from typing import Sequence, Union

# revision identifiers, used by Alembic.
revision: str = 'e7a8f491459a'
down_revision: Union[str, Sequence[str], None] = '524c86f1d584'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# We must manually define the ENUM here so Alembic knows what to do
# We are also providing a `name` for the enum to be created in the DB
role_enum = sa.Enum('admin', 'moderator', 'user', name='role')

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic###
    # Step 1: Create the 'role' enum type in the database before using it.
    # We get the database connection (bind) from Alembic's operations context.
    role_enum.create(op.get_bind())

    # Step 2: Add the new columns with server_default to avoid NotNullViolation
    op.add_column('users', sa.Column('username', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('email_verified', sa.Boolean(), nullable=False, server_default='False'))
    op.add_column('users', sa.Column('role', role_enum, nullable=False, server_default='user'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic###
    # The downgrade function reverses the changes.
    op.drop_column('users', 'role')
    op.drop_column('users', 'email_verified')
    op.drop_column('users', 'username')

    # After dropping the column, we must also drop the enum type
    role_enum.drop(op.get_bind())
    # ### end Alembic commands ###
