"""Add users table and link contacts to users

Revision ID: 524c86f1d584
Revises: b0f14953ec69
Create Date: 2025-08-06 12:41:21.189172 # Keep your original creation date here

"""
from alembic import op
import sqlalchemy as sa
from typing import Sequence, Union # Keep these imports if they were in your original file


# revision identifiers, used by Alembic.
revision: str = '524c86f1d584' # THIS WILL BE YOUR UNIQUE ID
down_revision: Union[str, Sequence[str], None] = 'b0f14953ec69'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the users table first
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=250), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('avatar', sa.String(length=255), nullable=True),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)

    # Add the user_id column to contacts, but allow NULL initially
    # NEW: nullable=True temporarily
    op.add_column('contacts', sa.Column('user_id', sa.Integer(), nullable=True))

    # NEW: Update existing contacts to set a default user_id (e.g., 1)
    # This assumes you will create a user with ID 1 after migration.
    # If your contacts table is empty, you can skip this update.
    # If it's not empty, you MUST set a value for existing rows.
    # You can also set a specific user_id based on your logic,
    # or create a dummy user first.
    # For simplicity, we'll set it to 1.
    op.execute("UPDATE contacts SET user_id = 1 WHERE user_id IS NULL")


    # Now alter the column to be NOT NULL and add the foreign key constraint
    # NEW: Alter column to nullable=False after updating existing rows
    op.alter_column('contacts', 'user_id',
               existing_type=sa.Integer(),
               nullable=False,
               existing_nullable=True) # Indicate that it was previously nullable

    op.create_foreign_key(op.f('fk_contacts_user_id_users'), 'contacts', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_contacts_user_id_users'), 'contacts', type_='foreignkey')
    op.drop_column('contacts', 'user_id')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
